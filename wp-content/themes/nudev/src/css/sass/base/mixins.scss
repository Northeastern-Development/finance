/**
 * modules/mixins
 * ---
 */


@mixin aspectRatio($x : 1, $y : 1) {
    $ratio: ($y / $x) * 100%;
    position: relative;

    &:before {
        content: '';
        display: block;
        padding-top: $ratio;
    }
}


@mixin clearfix {
    &:after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin gridLayout($w, $c, $g, $s) {
    & ul {
        display: inline-block;
        width: $w;
        margin: 0 auto 0 auto;

        &>li {
            $d: colWidth($w, $c, $g);
            width: $d;
            height: auto;
            float: left;

            div.image {
                @if $s==true {
                    height: $d
                }

                overflow: hidden;

                &>div {
                    transform: scale(1.0);
                    transition: all .5s;
                    background: rgba(getVar($colors, black, full), 1.0); // this is here just in case a background color is not otherwise defined
                }
            }

            p {
                margin: 0 0 20px 0;

                &>span {
                    display: block;
                }
            }

            &:nth-child(n+1) {
                // this will reset each child before applying to the target
                margin: 0 $g $g 0;
            }

            &:nth-child(#{$c}n) {
                margin: 0 0 $g 0;
            }
        }
    }
}

// this will set column widths for grid items
@function colWidth($w, $c, $g) {
    @return (($w - (($c - 1) * $g)) / $c);
}


// neu__iconlink
@mixin neu__iconlink($side : 'left', $icon : "\e5c8", $hover : 1) {
    border-bottom: 2px solid transparent;
    @include font-2l-l;
    display: inline-block;

    @if($side=='left') {
        &:before {
            display: inline-block;
            padding-right: 15px;
            font-size: 20px;
            font-family: "Material Icons";
            vertical-align: middle;
            content: $icon;
            line-height: inherit;
        }

        @if($hover==1) {

            &:hover,
            &:active,
            &:focus {
                color: $brand_colors-red;
            }
        }
    }

    @if($side=='right') {
        &:after {
            display: inline-block;
            padding-left: 15px;
            font-size: 20px;
            font-family: "Material Icons";
            vertical-align: middle;
            content: $icon;
            line-height: inherit;
        }

        @if($hover==1) {

            &:hover,
            &:active,
            &:focus {
                color: $brand_colors-red;
            }
        }
    }

    @if($hover==1) {

        &:hover,
        &:active,
        &:focus {
            border-bottom: 2px solid $brand_colors-red;
        }
    }
}

// no scaling hover applied because the trigger may be on a parent element
@mixin neu__bgimg($height: 245px) {
    // wrapper
    flex: 1;
    height: $height;
    overflow: hidden;
    // margin: 0 auto;
    margin-bottom: 15px;
    text-align: center;
    background-color: black;
    // bg
    position: relative;

    >div {
        position: absolute;
        top: 0;
        left: 0;
        width: 101%;
        height: 101%;
        background-position: center;
        background-size: cover;
        background-repeat: no-repeat;
        transform: scale(1);
        transition: transform 0.4s ease;
    }
}